.TH "JX-SCM\-RELEASE\-UPDATE" "1" "" "Auto generated by spf13/cobra" "" 
.nh
.ad l


.SH NAME
.PP
jx\-scm\-release\-update \- Updates a release


.SH SYNOPSIS
.PP
\fBjx\-scm release update\fP


.SH DESCRIPTION
.PP
Update a release


.SH OPTIONS
.PP
\fB\-\-description\fP=""
    the updated release description

.PP
\fB\-h\fP, \fB\-\-help\fP[=false]
    help for update

.PP
\fB\-k\fP, \fB\-\-kind\fP=""
    the kind of git server to use

.PP
\fB\-r\fP, \fB\-\-name\fP=""
    the name of the repository to update

.PP
\fB\-o\fP, \fB\-\-owner\fP=""
    the owner of the repository to update. Either an organisation or username

.PP
\fB\-\-prerelease\fP[=true]
    the updated prerelease status, true to identify the release as a prerelease, false to identify the release as a full release.

.PP
\fB\-s\fP, \fB\-\-server\fP=""
    the git server URL to use

.PP
\fB\-\-tag\fP=""
    the tag of the release to update

.PP
\fB\-\-title\fP=""
    the updated release title

.PP
\fB\-t\fP, \fB\-\-token\fP=""
    the token to use on the git server

.PP
\fB\-u\fP, \fB\-\-username\fP=""
    the user name to use on the git server


.SH EXAMPLE
.PP
# updates a release to change the title
  jx\-scm release update \-\-owner foo \-\-repository bar \-\-tag v1.2.3 \-\-title something

.PP
# updates a release to make it not a pre\-release
  jx\-scm release update \-\-owner foo \-\-repository bar \-\-tag v1.2.3 \-\-pre\-release false


.SH SEE ALSO
.PP
\fBjx\-scm\-release(1)\fP


.SH HISTORY
.PP
Auto generated by spf13/cobra
